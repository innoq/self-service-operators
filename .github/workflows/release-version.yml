name: test / build / release docker image

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags: [ '*.*.*' ]
  workflow_dispatch: {}

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  OS: linux
  ARCH: amd64
  HELM_VERSION: 3.6.3


jobs:
  retag_docker_image:
    name: Retag docker image to release version
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Re-tag current branch
        run: |
          git_sha=$(git rev-parse --short HEAD)
          git_tag=$(basename ${GITHUB_REF})

          # wait for image to be available
          max_tries=60 # max_tries times every 10 seconds
          for _ in $(seq 1 120)
          do
            sleep 10
            docker pull ${REGISTRY}/${IMAGE_NAME}:${git_sha} && break
          done

          docker tag  ${REGISTRY}/${IMAGE_NAME}:${git_sha} ${REGISTRY}/${IMAGE_NAME}:${git_tag}
          docker push ${REGISTRY}/${IMAGE_NAME}:${git_tag}

  publish_helm_chart:
    name: Publish Helm Chart
    runs-on: ubuntu-latest
    needs:
      - retag_docker_image
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'

      - uses: actions/cache@v2
        with:
          path: |
            /usr/local/bin
          key: ${{ runner.os }}-helm-${HELM_VERSION}-binary

      - name: Install helm
        run: |
          test -e /usr/local/bin/helm || wget -O- https://get.helm.sh/helm-v${HELM_VERSION}-${OS}-${ARCH}.tar.gz | tar --directory /usr/local/bin --strip-components=1 -xz ${OS}-${ARCH}/helm

      - name: Create helm packages & index
        run: |
          cd charts
          for dir in *
          do
            helm package $dir
          done
          helm repo index .
      - name: Publish chart
        run: |
          git config --global user.email "self-service-helm-creator@bornkessel.com"
          git config --global user.name "Helm Packager"

          git checkout gh-pages
          mv charts/*.yaml charts/*.tgz .

          git add .
          git commit -m "Update chart to app version $(basename ${GITHUB_REF})" || true
          git push
